{"version":3,"file":"scss-Dsuw-lBL.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/scss/scss.ts\nvar conf = {\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n  comments: {\n    blockComment: [\"/*\", \"*/\"],\n    lineComment: \"//\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".scss\",\n  ws: \"[ \t\\n\\r\\f]*\",\n  // whitespaces (referenced in several rules)\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  tokenizer: {\n    root: [{ include: \"@selector\" }],\n    selector: [\n      { include: \"@comments\" },\n      { include: \"@import\" },\n      { include: \"@variabledeclaration\" },\n      { include: \"@warndebug\" },\n      // sass: log statements\n      [\"[@](include)\", { token: \"keyword\", next: \"@includedeclaration\" }],\n      // sass: include statement\n      [\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\n      ],\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\n      // sass: placeholder for includes\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\"[@](function)\", { token: \"keyword\", next: \"@functiondeclaration\" }],\n      [\"[@](mixin)\", { token: \"keyword\", next: \"@mixindeclaration\" }],\n      [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }],\n      { include: \"@controlstatement\" },\n      // sass control statements\n      { include: \"@selectorname\" },\n      [\"[&\\\\*]\", \"tag\"],\n      // selector symbols\n      [\"[>\\\\+,]\", \"delimiter\"],\n      // selector operators\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\n      [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }]\n    ],\n    selectorbody: [\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\n      // rule definition: to distinguish from a nested selector check for whitespace, number or a semicolon\n      { include: \"@selector\" },\n      // sass: nested selectors\n      [\"[@](extend)\", { token: \"keyword\", next: \"@extendbody\" }],\n      // sass: extend other selectors\n      [\"[@](return)\", { token: \"keyword\", next: \"@declarationbody\" }],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    selectorname: [\n      [\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }],\n      // sass: interpolation\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\n      // selector (.foo, div, ...)\n    ],\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\n    term: [\n      { include: \"@comments\" },\n      [\"url(\\\\-prefix)?\\\\(\", { token: \"meta\", next: \"@urldeclaration\" }],\n      { include: \"@functioninvocation\" },\n      { include: \"@numbers\" },\n      { include: \"@strings\" },\n      { include: \"@variablereference\" },\n      [\"(and\\\\b|or\\\\b|not\\\\b)\", \"operator\"],\n      { include: \"@name\" },\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"operator\"],\n      [\",\", \"delimiter\"],\n      [\"!default\", \"literal\"],\n      [\"\\\\(\", { token: \"delimiter.parenthesis\", next: \"@parenthizedterm\" }]\n    ],\n    rulevalue: [\n      { include: \"@term\" },\n      [\"!important\", \"literal\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@nestedproperty\" }],\n      // sass: nested properties\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n      // missing semicolon\n    ],\n    nestedproperty: [\n      [\"[*_]?@identifier@ws:\", \"attribute.name\", \"@rulevalue\"],\n      { include: \"@comments\" },\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\n    variabledeclaration: [\n      // sass variables\n      [\"\\\\$@identifier@ws:\", \"variable.decl\", \"@declarationbody\"]\n    ],\n    urldeclaration: [\n      { include: \"@strings\" },\n      [\"[^)\\r\\n]+\", \"string\"],\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    parenthizedterm: [\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\n    ],\n    declarationbody: [\n      { include: \"@term\" },\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n      // missing semicolon\n    ],\n    extendbody: [\n      { include: \"@selectorname\" },\n      [\"!optional\", \"literal\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\n      // missing semicolon\n    ],\n    variablereference: [\n      // sass variable reference\n      [\"\\\\$@identifier\", \"variable.ref\"],\n      [\"\\\\.\\\\.\\\\.\", \"operator\"],\n      // var args in reference\n      [\"#{\", { token: \"meta\", next: \"@variableinterpolation\" }]\n      // sass var resolve\n    ],\n    variableinterpolation: [\n      { include: \"@variablereference\" },\n      [\"}\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    comments: [\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\n      [\"\\\\/\\\\/+.*\", \"comment\"]\n    ],\n    comment: [\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\n      [\".\", \"comment\"]\n    ],\n    name: [[\"@identifier\", \"attribute.value\"]],\n    numbers: [\n      [\"(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"number\", next: \"@units\" }],\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"number.hex\"]\n    ],\n    units: [\n      [\n        \"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\n        \"number\",\n        \"@pop\"\n      ]\n    ],\n    functiondeclaration: [\n      [\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@functionbody\" }]\n    ],\n    mixindeclaration: [\n      // mixin with parameters\n      [\"@identifier@ws\\\\(\", { token: \"meta\", next: \"@parameterdeclaration\" }],\n      // mixin without parameters\n      [\"@identifier\", \"meta\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    parameterdeclaration: [\n      [\"\\\\$@identifier@ws:\", \"variable.decl\"],\n      [\"\\\\.\\\\.\\\\.\", \"operator\"],\n      // var args in declaration\n      [\",\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    includedeclaration: [\n      { include: \"@functioninvocation\" },\n      [\"@identifier\", \"meta\"],\n      [\";\", \"delimiter\", \"@pop\"],\n      [\"(?=})\", { token: \"\", next: \"@pop\" }],\n      // missing semicolon\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    keyframedeclaration: [\n      [\"@identifier\", \"meta\"],\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@keyframebody\" }]\n    ],\n    keyframebody: [\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.curly\", next: \"@selectorbody\" }],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    controlstatement: [\n      [\n        \"[@](if|else|for|while|each|media)\",\n        { token: \"keyword.flow\", next: \"@controlstatementdeclaration\" }\n      ]\n    ],\n    controlstatementdeclaration: [\n      [\"(in|from|through|if|to)\\\\b\", { token: \"keyword.flow\" }],\n      { include: \"@term\" },\n      [\"{\", { token: \"delimiter.curly\", switchTo: \"@selectorbody\" }]\n    ],\n    functionbody: [\n      [\"[@](return)\", { token: \"keyword\" }],\n      { include: \"@variabledeclaration\" },\n      { include: \"@term\" },\n      { include: \"@controlstatement\" },\n      [\";\", \"delimiter\"],\n      [\"}\", { token: \"delimiter.curly\", next: \"@pop\" }]\n    ],\n    functioninvocation: [[\"@identifier\\\\(\", { token: \"meta\", next: \"@functionarguments\" }]],\n    functionarguments: [\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\n      [\"[,]\", \"delimiter\"],\n      { include: \"@term\" },\n      [\"\\\\)\", { token: \"meta\", next: \"@pop\" }]\n    ],\n    strings: [\n      ['~?\"', { token: \"string.delimiter\", next: \"@stringenddoublequote\" }],\n      [\"~?'\", { token: \"string.delimiter\", next: \"@stringendquote\" }]\n    ],\n    stringenddoublequote: [\n      [\"\\\\\\\\.\", \"string\"],\n      ['\"', { token: \"string.delimiter\", next: \"@pop\" }],\n      [\".\", \"string\"]\n    ],\n    stringendquote: [\n      [\"\\\\\\\\.\", \"string\"],\n      [\"'\", { token: \"string.delimiter\", next: \"@pop\" }],\n      [\".\", \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}